"Culex hortensis" = "native" ,
"Aedes spp." = "" ,
"Aedes koreicus" = "introduced" ,
"Culiseta longiareolata" = "introduced" ,
"Anopheles maculipennis" = "introduced" ,
"Aedes rusticus" = "native" ,
"Aedes albopictus" = "introduced" ,
"Culex modestus" = "introduced" ,
"Culex torrentium" = "native" ,
"Culiseta morsitans" = "native" ,
"Aedes annulipes/cantans" = "" ,
"Aedes sticticus" = "native" ,
"Coquillettidia richiardii" = "introduced" ,
"Aedes vexans" = "native" ,
"Aedes communis" = "introduced" ,
"Aedes cinereus/geminus" = "" ,
"Aedes punctor" = "introduced" ,
"Anopheles pharoensis" = "introduced" ,
"Aedes caspius/dorsalis" = "" ,
"Culiseta fumipennis" = "native" ,
"Culex territans" = "native" ,
"Anopheles atroparvus" = "introduced" ,
"Aedes detritus" = "native"
))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(lubridate)      # date transformation
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "raw", "00_MEMO_DATABASE_GBIF.csv"), sep = ';')
input_data %>% head(n = 5)
input_data %<>% remove_empty("rows")
input_data %<>% select(-c("phone_contact1","phone_contact2","phone_contact3","email_contact1","email_contact2","email_contact3","poe_street","poe_postalcode","contactname1","contactname2","contactname3","website","poe_contact_remark","collector_2","collector_3"))
integer_part_lat <- map_chr(input_data$poe_latitude, function(x) str_split(x, pattern = "\\.")[[1]][1])
decimal_part_lat <- map(input_data$poe_latitude, function(x) {
decimal_parts_lat <- NA_character_
splitted_string_lat <- str_split(x, pattern = "\\.")[[1]]
if (length(splitted_string_lat) > 1) {
decimal_parts_lat <- paste0(splitted_string_lat[2:length(splitted_string_lat)])
paste0(decimal_parts_lat, collapse = "")
}
else {
""
}
})
integer_part_long <- map_chr(input_data$poe_longitude, function(x) str_split(x, pattern = "\\.")[[1]][1])
decimal_part_long <- map(input_data$poe_longitude, function(x) {
decimal_parts_long <- NA_character_
splitted_string_long <- str_split(x, pattern = "\\.")[[1]]
if (length(splitted_string_long) > 1) {
decimal_parts_long <- paste0(splitted_string_long[2:length(splitted_string_long)])
paste0(decimal_parts_long, collapse = "")
}
else {
""
}
})
input_data %<>%
mutate(decimalLatitude_poe = as.numeric(paste(integer_part_lat, decimal_part_lat, sep = "."))) %>%
mutate(decimalLongitude_poe = as.numeric(paste(integer_part_long, decimal_part_long, sep = ".")))
input_data %>% head(n = 5)
write_csv(input_data, here::here("datasets","memo-occurrences", "data", "interim", "memoRawData.csv"), na = "")
interim_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "interim", "memoRawDataRefined.csv"), sep = ',')
head(input_data, n=5)
occurrence <- interim_data
event <- interim_data
event %<>% select(-c(latitude,longitude, trap_status,year, poe_latitude, poe_longitude, species.f, sex_collected, sex_stored, trap_code, pbs_code))
event %<>% mutate(dwc_eventID = str_c("IGT:MEMO:EV", sampling_code))
event %<>% mutate(dwc_type = "Event")
event %<>% mutate(dwc_language = "en") # e.g. "en"
event %<>% mutate(dwc_license = "https://creativecommons.org/licenses/by/4.0/")
# e.g. "http://creativecommons.org/publicdomain/zero/1.0/"
event %<>% mutate(dwc_rightsHolder = "Institute of Tropical Medicine Antwerp") # e.g. "INBO"
event %<>% mutate(dwc_accessRights = "http://www.inbo.be/en/norms-for-data-use")
event %<>% mutate(dwc_datasetID = "complete")
event %<>% mutate(dwc_institutionCode = "ITG") # e.g. "INBO"
event %<>% mutate(dwc_collectionCode = "ITG:Mosquitoes") # e.g. "INBO"
event %<>% mutate(dwc_datasetName = "MEMO - Monitoring exotic mosquitoes in Belgium") # e.g. "Checklist of non-native freshwater fishes in Flanders, Belgium"
event %<>% mutate(dwc_basisOfRecord = "HumanObservation")
head(event, n = 10)
event %<>% mutate(dwc_eventDate = paste(dmy(start_date),dmy(end_date), sep = "/"))
event %<>% mutate(dwc_samplingProtocol = trap_type)
event %<>% mutate(dwc_habitat = pbs_type)
event %<>% mutate(dwc_locationID = str_c("ITG:MEMO:",poe_code)) # e.g. "Belgium = BE"
event %<>% mutate(dwc_continent = "Europe") # e.g. "Belgium = BE"
event %<>% mutate(dwc_countryCode = "BE") # e.g. "Belgium = BE"
event %<>%
mutate(municipality = poe_city)
event %<>%
mutate(municipality = poe_name_extra)
head(event, n = 5)
event %<>%
mutate(dwc_decimalLongitude = round(decimalLongitude_poe, digits = 5)) %>%
mutate(dwc_decimalLatitude = round(decimalLatitude_poe, digits = 5))
event %<>%
mutate(dwc_decimalLatitude = as.character(format(dwc_decimalLatitude, nsmall = 5))) %>%
mutate(dwc_decimalLongitude = as.character(format(dwc_decimalLongitude, nsmall = 5)))
event %<>%
mutate(dwc_geodeticDatum = 'WGS84')
event %<>%
mutate(dwc_coordinateUncertaintyInMeters = '30')
event %<>% select(starts_with("dwc_"))
colnames(event) <- str_remove(colnames(event), "dwc_")
#remove collection columns
##  rename(scientificName = verbatimScientificName)
event %<>% distinct()
write_csv(event, here::here("datasets/memo-occurrences", "data", "processed", "event.csv"), na = "")
occurrence %<>% select(-c(latitude,longitude, trap_status,year, poe_latitude, poe_longitude, trap_code, pbs_code, start_date, end_date, trap_type, pbs_type, number_containers_checked, sampling_remarks, poe_type, poe_code, location, poe_type, poe_city, poe_country, poe_municipality, poe_name, poe_name_extra, decimalLatitude_poe, decimalLongitude_poe ))
occurrence %<>% mutate(dwc_materialSampleID = storage_box_code)
occurrence %<>% mutate(dwc_occurrenceID = unique_id_code)
occurrence %<>% mutate(dwc_eventID = str_c("IGT:MEMO:EV", sampling_code))
occurrence %<>% mutate(dwc_basisOfRecord = "HumanObservation")
occurrence %<>% mutate(dwc_recordedBy = collector_1)
occurrence %<>% mutate(dwc_identifiedBy = executor)
occurrence %<>% mutate(dwc_collectionCode = "ITG:Memo")
occurrence %<>% mutate(dwc_individualCount= number)
occurrence %<>% mutate(dwc_sex = recode(sex_collected,
"egg" = "",
"larva"  = "",
"pupa" = "",
))
occurrence %<>% mutate(dwc_lifeStage = recode(sex_collected,
"female" = "adult",
"male"  = "adult",
))
occurrence %<>% mutate(dwc_establishmentMeans = recode(species.f,
"Culex pipiens" = "native",
"Anopheles claviger"  = "exotic",
))
occurrence %<>% mutate(dwc_establishmentMeans = recode(species.f,
"Culex pipiens" = "native",
"Anopheles claviger"  = "exotic",
))
occurrence %<>% mutate(dwc_establishmentMeans = recode(species.f,
"Culicidae" = "" ,
"Anopheles claviger" = "introduced" ,
"Anopheles spp." = "introduced" ,
"Culex pipiens/torrentium" = "" ,
"Culiseta annulata" = "native" ,
"Culex spp." = "" ,
"Anopheles plumbeus" = "introduced" ,
"Aedes japonicus" = "introduced" ,
"Aedes geniculatus" = "native" ,
"Culiseta spp." = "" ,
"Anopheles maculipennis s.l." = "introduced" ,
"Anopheles daciae" = "introduced" ,
"Culex hortensis" = "native" ,
"Aedes spp." = "" ,
"Aedes koreicus" = "introduced" ,
"Culiseta longiareolata" = "introduced" ,
"Anopheles maculipennis" = "introduced" ,
"Aedes rusticus" = "native" ,
"Aedes albopictus" = "introduced" ,
"Culex modestus" = "introduced" ,
"Culex torrentium" = "native" ,
"Culiseta morsitans" = "native" ,
"Aedes annulipes/cantans" = "" ,
"Aedes sticticus" = "native" ,
"Coquillettidia richiardii" = "introduced" ,
"Aedes vexans" = "native" ,
"Aedes communis" = "introduced" ,
"Aedes cinereus/geminus" = "" ,
"Aedes punctor" = "introduced" ,
"Anopheles pharoensis" = "introduced" ,
"Aedes caspius/dorsalis" = "" ,
"Culiseta fumipennis" = "native" ,
"Culex territans" = "native" ,
"Anopheles atroparvus" = "introduced" ,
"Aedes detritus" = "native"
))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(lubridate)      # date transformation
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "raw", "00_MEMO_DATABASE_GBIF.csv"), sep = ';')
input_data %>% head(n = 5)
input_data %<>% remove_empty("rows")
input_data %<>% select(-c("phone_contact1","phone_contact2","phone_contact3","email_contact1","email_contact2","email_contact3","poe_street","poe_postalcode","contactname1","contactname2","contactname3","website","poe_contact_remark","collector_2","collector_3"))
integer_part_lat <- map_chr(input_data$poe_latitude, function(x) str_split(x, pattern = "\\.")[[1]][1])
decimal_part_lat <- map(input_data$poe_latitude, function(x) {
decimal_parts_lat <- NA_character_
splitted_string_lat <- str_split(x, pattern = "\\.")[[1]]
if (length(splitted_string_lat) > 1) {
decimal_parts_lat <- paste0(splitted_string_lat[2:length(splitted_string_lat)])
paste0(decimal_parts_lat, collapse = "")
}
else {
""
}
})
integer_part_long <- map_chr(input_data$poe_longitude, function(x) str_split(x, pattern = "\\.")[[1]][1])
decimal_part_long <- map(input_data$poe_longitude, function(x) {
decimal_parts_long <- NA_character_
splitted_string_long <- str_split(x, pattern = "\\.")[[1]]
if (length(splitted_string_long) > 1) {
decimal_parts_long <- paste0(splitted_string_long[2:length(splitted_string_long)])
paste0(decimal_parts_long, collapse = "")
}
else {
""
}
})
input_data %<>%
mutate(decimalLatitude_poe = as.numeric(paste(integer_part_lat, decimal_part_lat, sep = "."))) %>%
mutate(decimalLongitude_poe = as.numeric(paste(integer_part_long, decimal_part_long, sep = ".")))
input_data %>% head(n = 5)
write_csv(input_data, here::here("datasets","memo-occurrences", "data", "interim", "memoRawData.csv"), na = "")
interim_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "interim", "memoRawDataRefined.csv"), sep = ',')
head(input_data, n=5)
occurrence <- interim_data
event <- interim_data
event %<>% select(-c(latitude,longitude, trap_status,year, poe_latitude, poe_longitude, species.f, sex_collected, sex_stored, trap_code, pbs_code))
event %<>% mutate(dwc_eventID = str_c("IGT:MEMO:EV", sampling_code))
event %<>% mutate(dwc_type = "Event")
event %<>% mutate(dwc_language = "en") # e.g. "en"
event %<>% mutate(dwc_license = "https://creativecommons.org/licenses/by/4.0/")
# e.g. "http://creativecommons.org/publicdomain/zero/1.0/"
event %<>% mutate(dwc_rightsHolder = "Institute of Tropical Medicine Antwerp") # e.g. "INBO"
event %<>% mutate(dwc_accessRights = "http://www.inbo.be/en/norms-for-data-use")
event %<>% mutate(dwc_datasetID = "complete")
event %<>% mutate(dwc_institutionCode = "ITG") # e.g. "INBO"
event %<>% mutate(dwc_collectionCode = "ITG:Mosquitoes") # e.g. "INBO"
event %<>% mutate(dwc_datasetName = "MEMO - Monitoring exotic mosquitoes in Belgium") # e.g. "Checklist of non-native freshwater fishes in Flanders, Belgium"
event %<>% mutate(dwc_basisOfRecord = "HumanObservation")
head(event, n = 10)
event %<>% mutate(dwc_eventDate = paste(dmy(start_date),dmy(end_date), sep = "/"))
event %<>% mutate(dwc_samplingProtocol = trap_type)
event %<>% mutate(dwc_habitat = pbs_type)
event %<>% mutate(dwc_locationID = str_c("ITG:MEMO:",poe_code)) # e.g. "Belgium = BE"
event %<>% mutate(dwc_continent = "Europe") # e.g. "Belgium = BE"
event %<>% mutate(dwc_countryCode = "BE") # e.g. "Belgium = BE"
event %<>%
mutate(municipality = poe_city)
event %<>%
mutate(municipality = poe_name_extra)
head(event, n = 5)
event %<>%
mutate(dwc_decimalLongitude = round(decimalLongitude_poe, digits = 5)) %>%
mutate(dwc_decimalLatitude = round(decimalLatitude_poe, digits = 5))
event %<>%
mutate(dwc_decimalLatitude = as.character(format(dwc_decimalLatitude, nsmall = 5))) %>%
mutate(dwc_decimalLongitude = as.character(format(dwc_decimalLongitude, nsmall = 5)))
event %<>%
mutate(dwc_geodeticDatum = 'WGS84')
event %<>%
mutate(dwc_coordinateUncertaintyInMeters = '30')
event %<>% select(starts_with("dwc_"))
colnames(event) <- str_remove(colnames(event), "dwc_")
#remove collection columns
##  rename(scientificName = verbatimScientificName)
event %<>% distinct()
write_csv(event, here::here("datasets/memo-occurrences", "data", "processed", "event.csv"), na = "")
occurrence %<>% select(-c(latitude,longitude, trap_status,year, poe_latitude, poe_longitude, trap_code, pbs_code, start_date, end_date, trap_type, pbs_type, number_containers_checked, sampling_remarks, poe_type, poe_code, location, poe_type, poe_city, poe_country, poe_municipality, poe_name, poe_name_extra, decimalLatitude_poe, decimalLongitude_poe ))
occurrence %<>% mutate(dwc_materialSampleID = storage_box_code)
occurrence %<>% mutate(dwc_occurrenceID = unique_id_code)
occurrence %<>% mutate(dwc_eventID = str_c("IGT:MEMO:EV", sampling_code))
occurrence %<>% mutate(dwc_basisOfRecord = "HumanObservation")
occurrence %<>% mutate(dwc_recordedBy = collector_1)
occurrence %<>% mutate(dwc_identifiedBy = executor)
occurrence %<>% mutate(dwc_collectionCode = "ITG:Memo")
occurrence %<>% mutate(dwc_individualCount= number)
occurrence %<>% mutate(dwc_sex = recode(sex_collected,
"egg" = "",
"larva"  = "",
"pupa" = "",
))
occurrence %<>% mutate(dwc_lifeStage = recode(sex_collected,
"female" = "adult",
"male"  = "adult",
))
occurrence %<>% mutate(dwc_establishmentMeans = recode(species.f,
"Culicidae" = "" ,
"Anopheles claviger" = "introduced" ,
"Anopheles spp." = "introduced" ,
"Culex pipiens/torrentium" = "" ,
"Culiseta annulata" = "native" ,
"Culex spp." = "" ,
"Anopheles plumbeus" = "introduced" ,
"Aedes japonicus" = "introduced" ,
"Aedes geniculatus" = "native" ,
"Culiseta spp." = "" ,
"Anopheles maculipennis s.l." = "introduced" ,
"Anopheles daciae" = "introduced" ,
"Culex hortensis" = "native" ,
"Aedes spp." = "" ,
"Aedes koreicus" = "introduced" ,
"Culiseta longiareolata" = "introduced" ,
"Anopheles maculipennis" = "introduced" ,
"Aedes rusticus" = "native" ,
"Aedes albopictus" = "introduced" ,
"Culex modestus" = "introduced" ,
"Culex torrentium" = "native" ,
"Culiseta morsitans" = "native" ,
"Aedes annulipes/cantans" = "" ,
"Aedes sticticus" = "native" ,
"Coquillettidia richiardii" = "introduced" ,
"Aedes vexans" = "native" ,
"Aedes communis" = "introduced" ,
"Aedes cinereus/geminus" = "" ,
"Aedes punctor" = "introduced" ,
"Anopheles pharoensis" = "introduced" ,
"Aedes caspius/dorsalis" = "" ,
"Culiseta fumipennis" = "native" ,
"Culex territans" = "native" ,
"Anopheles atroparvus" = "introduced" ,
"Aedes detritus" = "native"
))
occurrence %<>% mutate(dwc_establishmentMeans = recode(species.f,
"Culicidae" = "" ,
"Anopheles claviger" = "introduced" ,
"Anopheles spp." = "introduced" ,
"Culex pipiens/torrentium" = "" ,
"Culiseta annulata" = "native" ,
"Culex spp." = "" ,
"Anopheles plumbeus" = "introduced" ,
"Aedes japonicus" = "introduced" ,
"Aedes geniculatus" = "native" ,
"Culiseta spp." = "" ,
"Anopheles maculipennis s.l." = "introduced" ,
"Anopheles daciae" = "introduced" ,
"Culex hortensis" = "native" ,
"Aedes spp." = "" ,
"Aedes koreicus" = "introduced" ,
"Culiseta longiareolata" = "introduced" ,
"Anopheles maculipennis" = "introduced" ,
"Aedes rusticus" = "native" ,
"Aedes albopictus" = "introduced" ,
"Culex modestus" = "introduced" ,
"Culex torrentium" = "native" ,
"Culiseta morsitans" = "native" ,
"Aedes annulipes/cantans" = "" ,
"Aedes sticticus" = "native" ,
"Coquillettidia richiardii" = "introduced" ,
"Aedes vexans" = "native" ,
"Aedes communis" = "introduced" ,
"Aedes cinereus/geminus" = "" ,
"Aedes punctor" = "introduced" ,
"Anopheles pharoensis" = "introduced" ,
"Aedes caspius/dorsalis" = "" ,
"Culiseta fumipennis" = "native" ,
"Culex territans" = "native" ,
"Anopheles atroparvus" = "introduced" ,
"Aedes detritus" = "native"
))
occurrence %<>% mutate(dwc_establishmentMeans = recode(species.f,
"Culicidae" = "" ,
"Anopheles claviger" = "introduced" ,
"Anopheles spp." = "introduced" ,
"Culex pipiens/torrentium" = "" ,
"Culiseta annulata" = "native" ,
"Culex spp." = "" ,
"Anopheles plumbeus" = "introduced" ,
"Aedes japonicus" = "introduced" ,
"Aedes geniculatus" = "native" ,
"Culiseta spp." = "" ,
"Anopheles maculipennis s.l." = "introduced" ,
"Anopheles daciae" = "introduced" ,
"Culex hortensis" = "native" ,
"Aedes spp." = "" ,
"Aedes koreicus" = "introduced" ,
"Culiseta longiareolata" = "introduced" ,
"Anopheles maculipennis" = "introduced" ,
"Aedes rusticus" = "native" ,
"Aedes albopictus" = "introduced" ,
"Culex modestus" = "introduced" ,
"Culex torrentium" = "native" ,
"Culiseta morsitans" = "native" ,
"Aedes annulipes/cantans" = "" ,
"Aedes sticticus" = "native" ,
"Coquillettidia richiardii" = "introduced" ,
"Aedes vexans" = "native" ,
"Aedes communis" = "introduced" ,
"Aedes cinereus/geminus" = "" ,
"Aedes punctor" = "introduced" ,
"Anopheles pharoensis" = "introduced" ,
"Aedes caspius/dorsalis" = "" ,
"Culiseta fumipennis" = "native" ,
"Culex territans" = "native" ,
"Anopheles atroparvus" = "introduced" ,
"Aedes detritus" = "native"
))
occurrence %<>%
##select(individualCount) %>%
mutate(dwc_occurrenceStatus = case_when(dwc_individualCount > 0 ~ "present",
dwc_individualCount == 0 ~ "absent"
)
)
occurrence %<>% mutate(dwc_identifiedBy = executor)
occurrence %<>% mutate(dwc_dateIdentified = date_lab_id)
occurrence %<>% mutate(dwc_identificationRemarks = lab_remarks)
occurrence %<>% mutate(dwc_scientificName = species.f)
occurrence %<>% mutate(dwc_kingdom = "Animalia")
occurrence %<>% mutate(dwc_taxonRank = case_when(
species.f == 'Culex spp.' ~ "genus"
,species.f == 'Culiseta spp.' ~ "genus"
,species.f == 'Aedes spp.' ~ "genus"
,species.f == '' ~ ''
,species.f == 'Anopheles spp.' ~ "genus"
,TRUE ~ "species"                   ))
occurrence %<>% mutate(dwc_nomenclaturalCode = "ICZN") # e.g. "ICZN"
occurrence %<>% select(starts_with("dwc_"))
colnames(occurrence) <- str_remove(colnames(occurrence), "dwc_")
#remove collection columns
##  rename(scientificName = verbatimScientificName)
occurrence %<>% distinct()
occurrence %>% head()
write_csv(occurrence, here::here("datasets","memo-occurrences", "data", "processed", "occurrence.csv"), na = "")
parsed_names <- occurrence %>%
distinct(scientificName)  %>%
pull() %>% # Create vector from dataframe
parsenames() # An rgbif function
speciesList <- parsed_names %>%
select(scientificname)
write_csv(speciesList, here::here("datasets","memo-occurrences", "data", "processed", "specieslist.csv"), na = "")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
#library(sf)             # coordinate transformation
library(lubridate)      # date transformation
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "favv-mosquitoes", "data", "raw", "unionSamplingALL.csv"), sep = ';')
input_data %>% head(n = 5)
input_data %<>% remove_empty("rows")
view(input_data)
input_data %<>% select(-c("ZIP.code","Website"))
input_data %<>% select(-c("ZIP.Code","Website"))
input_data %>% head(n = 5)
occurrence <- interim_data
occurrence <- input_data
event <- input_data
view(event)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
#library(sf)             # coordinate transformation
library(lubridate)      # date transformation
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "favv-mosquitoes", "data", "raw", "unionSamplingALL.csv"), sep = ';')
input_data %>% head(n = 5)
input_data %<>% remove_empty("rows")
input_data %<>% select(-c("ZIP.Code","Website"))
input_data %>% head(n = 5)
occurrence <- input_data
event <- input_data
occurrence <- input_data
event <- input_data
event %<>% select(-c(ID,UnionQuery1_Site.Code,Family, Genus, Species, Sex, Number, Box, Storage.of.Box, Status, Identifier, Date.ID, Comments.identification))
view(event)
event %<>% mutate(dwc_eventID = str_c("IGT:FAVV:", rowid_to_column()))
event %<>% mutate(dwc_eventID = str_c("IGT:FAVV:"))
event %<>% group_by(Site.Name)
view(event)
event %<>% group_by(Site.Name)
view(event)
event %<>% group_by('Site.Name')
view(event)
event %<>% unique(event)
event %>% distinct()
view (event)
event %<>% distinct()
view(event)
