library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(lubridate)      # date transformation
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "favv-ixodida", "data", "interim", "IntegratedOutput_Ticks_ITG.csv"), sep = ',')
input_data %>% head(n = 5)
input_data %<>% remove_empty("rows")
input_data %<>%
clean_names()
input_data %<>% select(-c("male","female","larva","nymph","id_1"))
input_data %>% head(n = 5)
input_data %<>%
mutate(
Theileriaequi = na_if(theileriaequi, "negative"),
`Babesiacanis_caballi` = na_if(`babesiacanis_caballi`, "negative"),
TBE = na_if(tbe, "negative"),
Borrelia = na_if(borrelia, "negative"),
host = "host"
) %>%
gather(
parasite,
value,
host, theileriaequi, `babesiacanis_caballi`, tbe, borrelia,
na.rm = TRUE,
convert = TRUE
)
input_data %<>%
mutate(scientificName = if_else(
parasite == "host",
paste(genus, species),
str_to_title(parasite)
))
input_data <-
input_data %>%
group_by(id) %>%
add_tally() %>%
mutate(progressive_number = row_number()) %>%
mutate(unique_id = if_else(n > 1,
paste0(id, ":", progressive_number),
as.character(id))) %>%
ungroup() %>%
select(-c(progressive_number, n)) %>%
select(id,unique_id, everything())
input_data %<>%
mutate (dwc_scientificName = recode(scientificName ,
"Babesiacanis_caballi" = "Babesiacanis caballi",
"Tbe"                  = "Tick-borne encephalitis virus",
"Theileriaequi"        = "Theieria equi",
"Ixodes "               = "Ixodes ricinus"
))
input_data %<>% mutate(dwc_eventID = str_c("ITG:FAVV:T:EV:",str_replace(collectiondate,",","-") ,str_replace(extractiondate, ",","-") ,str_replace(latitutde, ",","-"),str_replace(longitude, ",","-")))
input_data %<>% select(-c(species, genus, Theileriaequi, Babesiacanis_caballi, TBE))
head(input_data)
input_data <- input_data %>% mutate(row_id = row_number())
input_data %<>%  mutate(dwc_sex = case_when(
scientificName == 'Dermacentor reticulatus' ~ tolower(sex),
scientificName == 'Ixodes ricinus' ~ tolower(sex),
scientificName == 'Ixodes ' ~ tolower(sex)
))
input_data %<>%  mutate(parasite_extractiontype = case_when(
scientificName == 'Borelia' ~ tolower(extractiontype),
scientificName == 'Tbe' ~ tolower(extractiontype),
scientificName == 'Babesiacanis_caballi' ~ tolower(extractiontype),
scientificName == 'Theileriaequi' ~ tolower(extractiontype)
))
occurrence1 <- input_data
occurrence1 %<>% mutate(dwc_occurrenceID = str_c("ITG:FAVV:IX:OCC:",unique_id))
occurrence1 %<>% mutate(dwc_type = "Event")
occurrence1 %<>% mutate(dwc_language = "en") # e.g. "en"
occurrence1 %<>% mutate(dwc_license = "https://creativecommons.org/licenses/by/4.0/")
# e.g. "http://creativecommons.org/publicdomain/zero/1.0/"
occurrence1 %<>% mutate(dwc_rightsHolder = "Institute of Tropical Medicine Antwerp") # e.g. "INBO"
occurrence1 %<>% mutate(dwc_accessRights = "http://www.inbo.be/en/norms-for-data-use")
occurrence1 %<>% mutate(dwc_datasetID = "complete")
occurrence1 %<>% mutate(dwc_institutionCode = "ITM") # e.g. "INBO"
occurrence1 %<>% mutate(dwc_collectionCode = "ITG:ixodida") # e.g. "INBO"
occurrence1 %<>% mutate(dwc_datasetName = "FASFC - Exotic vector and pathogen surveillance programme in Belgium - Ixodida_host") # e.g. "Checklist of non-native freshwater fishes in Flanders, Belgium"
occurrence1 %<>% mutate(dwc_basisOfRecord = "HumanObservation")
head(occurrence1, n = 10)
occurrence1 %<>% mutate(dwc_eventDate = collectiondate)
#paste((Start.Date),"/",(End.Date)
occurrence1 %<>% mutate(dwc_samplingProtocol = 'dragging or by hand collection from vegetation or hosts')
occurrence1 %<>% mutate(dwc_locationID = str_c("ITG:FAVV:",sitecode)) # e.g. "Belgium = BE"
occurrence1 %<>% mutate(dwc_continent = "Europe") # e.g. "Belgium = BE"
occurrence1 %<>% mutate(dwc_countryCode = "BE") # e.g. "Belgium = BE"
occurrence1 %<>%
mutate(dwc_municipality = municipality)
occurrence1 %<>%
mutate(dwc_locality = site_name)
head(occurrence1, n = 5)
occurrence1 %<>%
mutate(decimalLongitude = str_replace(longitude, ",",".")) %>%
mutate(decimalLatitude = str_replace(latitutde, ",","."))
occurrence1 %<>%
mutate(dwc_decimalLatitude = (round(as.numeric(decimalLatitude), digits = 5))) %>%
mutate(dwc_decimalLongitude = (round(as.numeric(decimalLongitude), digits = 5)))
head(occurrence1)
occurrence1 %<>%
mutate(dwc_geodeticDatum = 'WGS84')
occurrence1 %<>%
mutate(dwc_coordinateUncertaintyInMeters = '30')
occurrence1 %<>%
mutate(dwc_order = case_when(
scientificName == 'Dermacentor reticulatus' ~ 'Ixodida',
scientificName == 'Ixodes ricinus' ~ 'Ixodida',
scientificName == 'Ixodes ' ~ 'Ixodida',
scientificName == 'Babesiacanis caballi' ~ 'Piroplasmida',
scientificName == 'Borelia' ~ 'Spirochaetales',
scientificName == 'Theileriaequi' ~ 'Piroplasmida',
scientificName == 'Tbe' ~ 'Amarillovirales'
))
occurrence1 %<>% mutate(dwc_basisOfRecord = "HumanObservation")
occurrence1 %<>% mutate(dwc_recordedBy = "ITM")
occurrence1 %<>% mutate(dwc_identifiedBy = 'ITG')
occurrence1 %<>% mutate(dwc_collectionCode = "ITG:FAVV")
occurrence1 %<>% mutate(dwc_individualCount = case_when(
scientificName == 'Dermacentor reticulatus' ~ poolnumber,
scientificName == 'Ixodes ricinus' ~ poolnumber,
scientificName == 'Ixodes ' ~ poolnumber
))
occurrence1 %<>% mutate(dwc_lifeStage = case_when(
scientificName == 'Dermacentor reticulatus' ~ lifestage,
scientificName == 'Ixodes ricinus' ~ lifestage,
scientificName == 'Ixodes ' ~ lifestage
))
occurrence1 %<>%
##select(individualCount) %>%
mutate(dwc_occurrenceStatus = case_when(value == 'positive' ~ "present",
value == 'negative' ~ "absent" ,
value == 'host' ~"present"
)
)
occurrence1 %<>% mutate(dwc_identifiedBy = 'ITG')
occurrence1 %<>% mutate(dwc_kingdom = "Animalia")
occurrence1 %<>% mutate(dwc_taxonRank = case_when(
dwc_scientificName == 'Ixodes ricinus' ~ "species",
dwc_scientificName == 'Ixodes ' ~ "genus",
dwc_scientificName == 'Dermacentor reticulatus' ~ "species",
dwc_scientificName == 'Babesiacanis caballi' ~ "species",
dwc_scientificName == 'Theieria equi' ~ "species" ,
dwc_scientificName == 'Borrelia' ~ "genus" ,
dwc_scientificName == 'Tick-borne encephalitis virus' ~ "species"
))
#,TRUE ~ "species"
occurrence1 %<>% mutate(dwc_nomenclaturalCode = case_when(
dwc_scientificName == 'Ixodes ricinus' ~ "ICZN",
dwc_scientificName == 'Ixodes ' ~ "ICZN",
dwc_scientificName == 'Dermacentor reticulatus' ~ "ICZN",
dwc_scientificName == 'Babesiacanis caballi' ~ "ICZN",
dwc_scientificName == 'Theieria equi' ~ "ICZN" ,
dwc_scientificName == 'Borrelia' ~ "ICZN" ,
dwc_scientificName == 'Tick-borne encephalitis virus' ~ "ICTV"
))
host_df <-  occurrence1 %>%
filter(parasite == 'host') %>%
mutate(hostoccurrenceID = id) %>%
select(hostoccurrenceID, id)
#occurrence1 %<>% left_join(host_df, by = ('id'))
occurrence1 %<>% left_join(host_df, by = c('id' = 'hostoccurrenceID'))
occurrence1 %<>% filter(value != '')
resourceRelationShip <- occurrence1
resourceRelationShip %<>% filter(dwc_scientificName != 'Ixodes ricinus',
dwc_scientificName != 'Ixodes ',
dwc_scientificName != 'Dermacentor reticulatus'
)
resourceRelationShip %<>% mutate(ddwc_occurrenceID =  dwc_occurrenceID)
resourceRelationShip %<>% mutate(ddwc_resourceID = str_c("ITG:FAVV:IX:OCC:",id, ":1"))
resourceRelationShip %<>% mutate(ddwc_relatedresourceID = str_c("ITG:FAVV:IX:OCC:",unique_id))
resourceRelationShip %<>% mutate(ddwc_relationshipOfResource = 'is pathogen in')
occurrence1 %<>% select(starts_with("dwc_"))
colnames(occurrence1) <- str_remove(colnames(occurrence1), "dwc_")
#remove collection columns
##  rename(scientificName = verbatimScientificName)
occurrence1 %<>% distinct()
resourceRelationShip %<>% select(starts_with("ddwc_"))
colnames(resourceRelationShip) <- str_remove(colnames(resourceRelationShip), "ddwc_")
#remove collection columns
##  rename(scientificName = verbatimScientificName)
#resourceRelationShip %<>% distinct()
occurrence1 %>% head()
resourceRelationShip %>% head()
write_csv(occurrence1, here::here("datasets","favv-ixodida", "data", "processed", "occurrence.csv"), na = "")
parsed_names <- occurrence1 %>%
distinct(scientificName)  %>%
pull() %>% # Create vector from dataframe
parsenames() # An rgbif function
speciesList <- parsed_names %>%
select(scientificname)
write_csv(speciesList, here::here("datasets","favv-ixodida", "data", "processed", "specieslist.csv"), na = "")
write_csv(occurrence1, here::here("datasets","favv-ixodida", "data", "processed", "occurrence.csv"), na = "")
write_csv(resourceRelationShip, here::here("datasets","favv-ixodida", "data", "processed", "resourceRelationship.csv"), na = "")
install.packages('bdvis')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(lubridate)      # date transformation
library (bdvis)         #vizualisation data
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed", "Memo_stripped.csv"), sep = ',')
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed", "Memo_stripped.csv"), sep = ';')
input_data %>% head(n = 5)
Culicidae <- format_bdvis(input_data,"rgbif")
mapgrid(Culicidae, ptype=“species”)
mapgrid(Culicidae, ptype = 'presence')
mapgrid(Culicidae, ptype = 'records')
mapgrid(Culicidae, ptype = 'species')
Culicidae %<>% mutate(scientific_name = scientificName)
mapgrid(Culicidae, ptype = 'species')
mapgrid(Culicidae, ptype = 'species' ,  mapdatabase = 'Belgium')
mapgrid(Culicidae, ptype = 'species' ,  region = ('Belgium')
mapgrid(Culicidae, ptype = 'species' ,  region = ('Belgium'))
mapgrid(Culicidae, ptype = 'presense' ,  region = ('Belgium'))
mapgrid(Culicidae, ptype = 'presence' ,  region = ('Belgium'))
mapgrid(Culicidae, ptype = 'records' ,  region = ('Belgium'))
tempolar(Culicidae, color=“blue”, plottype=“r”)
tempolar(Culicidae, color=“blue”, plottype='r' )
tempolar(Culicidae, color='blue', plottype='r' )
tempolar(Culicidae, color='blue', plottype='r', timescale = 'm' )
tempolar(Culicidae, color='blue', plottype='p', timescale = 'm' )
mapgrid(Culicidae, ptype = 'records' ,  region = ('Belgium'), gridscale = 0,1)
mapgrid(Culicidae, ptype = 'records' ,  region = ('Belgium'), gridscale = 0.1)
mapgrid(Culicidae, ptype = 'records' ,  region = ('Belgium'), gridscale = 0.01)
mapgrid(Culicidae, ptype = 'complete' ,  region = ('Belgium'), gridscale = 0.01)
bdcomplete(Culicidae, recs = 50, gridscale = 1)
mapgrid(Culicidae, ptype = 'complete' ,  region = ('Belgium'), gridscale = 0.01)
mapgrid(Culicidae, ptype = 'complete' ,  region = ('Belgium'), gridscale = 0.01)
mapgrid(Culicidae, ptype = 'presence' ,  region = ('Belgium'), gridscale = 0.01)
mapgrid(Culicidae, ptype = 'presence' ,  region = ('Belgium'), gridscale = 0.1)
Chronogram(Culicidae)
Chronohorogram(Culicidae)
chronohorogram(Culicidae)
bdcalendarheat(Culididae)
bdcalendarheat(Culicidae)
bdsummary(Culicidae)
gettaxo(Culicidae)
install.packages('taxotools')
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(lubridate)      # date transformation
library (bdvis)         #vizualisation data
library (taxotools)     # something with taxonomy
list_higher_taxo(Culicidae)
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed", "complete_dwc_culicidae" ,"occurrence.txt"), sep = ';')
input_data %>% head(n = 5)
Culicidae %<>% mutate(canonical = species)
list_higher_taxo(Culicidae)
view(Culicidae)
list_higher_taxo(Culicidae, canonical = scientificName)
list_higher_taxo(Culicidae, canonical = scientific_name)
list_higher_taxo(Culicidae, canonical = canonical)
list_higher_taxo(Culicidae, canonical = canonical)
list_higher_taxo(Culicidae, canonical='scientific_name')
list_higher_taxo(Culicidae, canonical='Vulpes vulpes')
list_higher_taxo(Culicidae, canonical= 'species')
list_higher_taxo(Culicidae, canonical= 'species')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(lubridate)      # date transformation
library (bdvis)         # vizualisation data
library (taxotools)     # something with taxonomy
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed", "complete_dwc_culicidae" ,"occurrence.txt"), sep = ';')
input_data %>% head(n = 5)
Culicidae <- format_bdvis(input_data,"rgbif")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(lubridate)      # date transformation
library (bdvis)         # vizualisation data
library (taxotools)     # something with taxonomy
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed", "complete_dwc_culicidae" ,"occurrence.txt"), sep = ';')
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed", "Memo_complete.csv" ,""), sep = ';')
input_data %>% head(n = 5)
Culicidae <- format_bdvis(input_data,"rgbif")
list_higher_taxo(Culicidae, canonical= 'species')
taxolist <- list_higher_taxo(Culicidae, canonical= 'species')
view(taxolist)
bdsummary(Culicidae)
bdcalendarheat(Culicidae)
chronohorogram(Culicidae)
tempolar(Culicidae, color='blue', plottype='p', timescale = 'm' )
mapgrid(Culicidae, ptype = 'presence' ,  region = ('Belgium'), gridscale = 0.1)
mapgrid(Culicidae, ptype = 'presence' ,  region = ('Belgium'), gridscale = 0.05)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(lubridate)      # date transformation
library (bdvis)         # vizualisation data
library (taxotools)     # something with taxonomy
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed", "Memo_complete.csv" ,""), sep = ';')
input_data %>% head(n = 5)
Culicidae <- format_bdvis(input_data,"rgbif")
Culicidae %<>% mutate(scientific_name = scientificName)
Culicidae %<>% mutate(canonical = species)
bdcomplete(Culicidae, recs = 50, gridscale = 1)
mapgrid(Culicidae, ptype = 'presence' ,  region = ('Belgium'), gridscale = 0.05)
bdcalendarheat(Culicidae)
bdsummary(Culicidae)
taxolist <- list_higher_taxo(Culicidae, canonical= 'species')
view(culicidae)
view(Culicidae)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(lubridate)      # date transformation
library (bdvis)         # vizualisation data
library (taxotools)     # something with taxonomy
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed", "Memo_complete.csv" ,""), sep = ';')
input_data %>% head(n = 5)
Culicidae <- format_bdvis(input_data,"rgbif")
Culicidae %<>% mutate(canonical = species)
taxolist <- list_higher_taxo(Culicidae, canonical= 'species')
view(taxolist)
chronohorogram(, ptsize = 0.1)
chronohorogram(Culicidae, ptsize = 0.5)
chronohorogram(Culicidae, ptsize = 10)
bdwebmap(Culicidae)
taxotree(Culicidae)
taxotree(taxolist)
taxotree(Culicidae)
Culicidae %<>% mutate (Family = family)
taxotree(Culicidae)
Culicidae %<>% mutate (Family = family) %>%
mutate (Genus = genus)
taxotree(Culicidae)
taxotree(Culicidae)
taxotree(Culicidae)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(lubridate)      # date transformation
library (bdvis)         # vizualisation data
library (taxotools)     # something with taxonomy
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed", "Memo_complete.csv" ,""), sep = ';')
Culicidae <- format_bdvis(input_data,"rgbif")
taxotree(Culicidae)
taxotree(Culicidae, sum1 = 'species')
taxotree(Culicidae, sum1 = 'species' , sum 2 = 'genus')
taxotree(Culicidae, sum1 = 'species' , sum2 = 'genus')
taxotree(Culicidae, sum1 = 'species' , sum2 = 'Genus')
taxotree(Culicidae, sum1 = 'Genus' , sum2 = 'species')
taxotree(Culicidae, sum1 = 'Order' , sum2 = 'species')
taxotree(Culicidae, sum1 = 'order' , sum2 = 'species')
taxotree(Culicidae, sum1 = 'family' , sum2 = 'species')
taxotree(Culicidae, sum1 = 'Family' , sum2 = 'species')
taxotree(Culicidae, sum1 = 'species' , sum2 = 'species')
taxotree(Culicidae, sum1 = 'species' , sum2 = 'Family')
taxotree(Culicidae, sum1 = 'species' , sum2 = 'Genus')
taxotree(Culicidae, sum1 = 'Genus' , sum2 = 'Genus')
taxotree(Culicidae, sum1 = 'Genus' , sum2 = 'species')
taxotree(Culicidae, sum1 = 'genus' , sum2 = 'species')
taxotree(Culicidae, sum1 = 'Genus' , sum2 = 'species')
taxotree(Culicidae, sum1 = 'species' )
taxotree(Culicidae, sum1 = 'genus' )
taxotree(Culicidae, sum1 = 'Genus' )
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(lubridate)      # date transformation
library (bdvis)         # vizualisation data
library (taxotools)     # something with taxonomy
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed", "Memo_complete.csv" ,""), sep = ';')
input_data %>% head(n = 5)
Culicidae <- format_bdvis(input_data,"rgbif")
Culicidae <- format_bdvis(input_data)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)      # To do data science
library(tidylog)        # To provide feedback on dplyr functions
library(magrittr)       # To use %<>% pipes
library(here)           # To find files
library(janitor)        # To clean input data
library(readxl)         # To read Excel files
library(digest)         # To generate hashes
library(rgbif)          # To use GBIF services
library(sp)             # coordinate transformation
library(leaflet)        # coordinate transformation
library(widgetframe)    # coordinate transformation
library(sf)             # coordinate transformation
library(lubridate)      # date transformation
library (bdvis)         # vizualisation data
library (taxotools)     # something with taxonomy
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed", "Memo_complete.csv" ,""), sep = ';')
input_data %>% head(n = 5)
Culicidae <- format_bdvis(input_data)
Culicidae <- format_bdvis(input_data, rgbif)
Culicidae <- format_bdvis(input_data, 'rgbif')
mapgrid(Culicidae, ptype = 'presence' ,  region = ('Belgium'), gridscale = 0.05)
mapgrid(Culicidae, ptype = 'presence' ,  region = ('Belgium'), gridscale = 0.15)
bdcomplete(Culicidae, recs = 50, gridscale = 1)
Culicidae %<>% mutate(scientific_name = scientificName)
Culicidae %<>% mutate(canonical = species)
bdcomplete(Culicidae, recs = 50, gridscale = 1)
mapgrid(Culicidae, ptype = 'presence' ,  region = ('Belgium'), gridscale = 0.15)
tempolar(Culicidae, color='blue', plottype='p', timescale = 'm' )
chronohorogram(Culicidae, ptsize = 10)
bdcalendarheat(Culicidae)
bdsummary(Culicidae)
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed","complete_dwc_culicidae", "occurrence.csv" ,""), sep = ';')
input_data %>% head(n = 5)
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed","complete_dwc_culicidae", "occurrence.csv" ,""), sep = ',')
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed","complete_dwc_culicidae", "occurrence.csv" ,""), sep = '/t')
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed","complete_dwc_culicidae", "occurrence.csv" ,""), sep = 't')
input_data %>% head(n = 5)
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed","complete_dwc_culicidae", "occurrence.csv" ,""), sep = ',')
#input_interim <- read_csv2(file = here:here("datasets", "mica-uvw-occurrences", "data", "raw", "2020_11_18_Vangstgegevens #muskus- en beverratten_NL_2019.csv"))
input_data <- read.csv(file = here::here("datasets", "memo-occurrences", "data", "processed","complete_dwc_culicidae", "occurrence.csv" ,""), sep = ';')
input_data %>% head(n = 5)
